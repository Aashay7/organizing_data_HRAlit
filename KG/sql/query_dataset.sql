\copy (
  WITH CTE AS (
    SELECT     	
	'#Dataset/' || normalize_id(dataset_id) as dataset_id,
	dataset_id as identifier,
	organ_gtex_id,
	ARRAY_AGG(DISTINCT '#Donor/' || normalize_id(donor_id)) FILTER (WHERE donor_id IS NOT NULL) AS donor_ids,
	individual_id,
	protocols_used,
	rin_score_from_paxgene,
	rin_score_from_frozen,
	ARRAY_AGG(DISTINCT organ) FILTER (WHERE organ IS NOT NULL) AS organs,
	autolysis_score,
	sample_ischemic_time,
	sample_type,
	pathology_notes,
	source,
	dataset_hubmap_id,
	dataset_status,
	dataset_group_name,
	dataset_group_uuid,
	dataset_date_time_created,
	dataset_created_by_email,
	dataset_date_time_modified,
	dataset_modified_by_email,
	lab_id_or_name,
	dataset_data_types,
	dataset_portal_url,
	first_sample_hubmap_id,
	first_sample_submission_id,
	first_sample_uuid,
	first_sample_type,
	first_sample_portal_url,
	organ_hubmap_id,
	organ_submission_id,
	organ_uuid,
	donor_submission_id,
	donor_uuid,
	donor_group_name,
	rui_location_hubmap_id,
	rui_location_submission_id,
	rui_location_uuid,
	sample_metadata_hubmap_id,
	sample_metadata_submission_id,
	sample_metadata_uuid,
	processed_dataset_uuid,
	dataset_title,
	dataset_h5ad_path,
	dataset_total_cell_count,
	collection_id,
	collection_name,
	publication_doi,
	ARRAY_AGG(DISTINCT '#Ontology/' || normalize_id(organ_ontology)) FILTER (WHERE organ_ontology IS NOT NULL) AS organ_ontologies,
	ARRAY_AGG(DISTINCT anatomical_structure) FILTER (WHERE anatomical_structure IS NOT NULL) AS anatomical_structures,
	ARRAY_AGG(DISTINCT '#Ontology/' || normalize_id(anatomical_structure_ontology)) FILTER (WHERE anatomical_structure_ontology IS NOT NULL) AS anatomical_structure_ontologies,
	ARRAY_AGG(DISTINCT suspension_type) FILTER (WHERE suspension_type IS NOT NULL) AS suspension_types
    FROM datasets_metadata 
    GROUP BY dataset_id,organ_gtex_id,individual_id,protocols_used,rin_score_from_paxgene,rin_score_from_frozen,autolysis_score,sample_ischemic_time,sample_type,pathology_notes,source,dataset_hubmap_id,dataset_status,dataset_group_name,dataset_group_uuid,dataset_date_time_created,dataset_created_by_email,dataset_date_time_modified,dataset_modified_by_email,lab_id_or_name,dataset_data_types,dataset_portal_url,first_sample_hubmap_id,first_sample_submission_id,first_sample_uuid,first_sample_type,first_sample_portal_url,organ_hubmap_id,organ_submission_id,organ_uuid,donor_submission_id,donor_uuid,donor_group_name,rui_location_hubmap_id,rui_location_submission_id,rui_location_uuid,sample_metadata_hubmap_id,sample_metadata_submission_id,sample_metadata_uuid,processed_dataset_uuid,dataset_title,dataset_h5ad_path,dataset_total_cell_count,collection_id,collection_name,publication_doi

  )
  SELECT 
	jsonb_strip_nulls(ROW_TO_JSON(row)::jsonb) AS json_data
  FROM (
    SELECT 
        dataset_id AS "@id", 
        'Dataset' AS "@type", 
        identifier AS identifier,
	'Dataset' AS "role", 
	dataset_title AS name,
	organ_gtex_id AS "organGtexId",
	donor_ids AS "hasDonor",
	individual_id AS "individualId",
	protocols_used AS "protocolsUsed",
	rin_score_from_paxgene AS "rinScoreFromPaxgene",
	rin_score_from_frozen AS "rinScoreFromFrozen",
	organs,
	autolysis_score AS "autolysisScore",
	sample_ischemic_time AS "sampleIschemicTime",
	sample_type AS "sampleType",
	pathology_notes AS "pathologyNotes",
	source,
	dataset_hubmap_id AS "datasetHubmapId",
	dataset_status AS "datasetStatus",
	dataset_group_name AS "datasetGroupName",
	dataset_group_uuid AS "datasetGroupUuid",
	dataset_date_time_created AS "DatasetDateTimeCreated",
	dataset_created_by_email AS "DatasetCreatedByEmail",
	dataset_date_time_modified AS "DatasetDateTimeModified",
	dataset_modified_by_email AS "DatasetModifiedByEmail",
	lab_id_or_name AS "LabIDOrName",
	dataset_data_types AS "DatasetDataTypes",
	dataset_portal_url AS "DatasetPortalURL",
	first_sample_hubmap_id AS "FirstSampleHubmapID",
	first_sample_submission_id AS "FirstSampleSubmissionID",
	first_sample_uuid AS "FirstSampleUUID",
	first_sample_type AS "FirstSampleType",
	first_sample_portal_url AS "FirstSamplePortalURL",
	organ_hubmap_id AS "OrganHubmapID",
	organ_submission_id AS "OrganSubmissionID",
	organ_uuid AS "OrganUUID",
	donor_submission_id AS "DonorSubmissionID",
	donor_uuid AS "DonorUUID",
	donor_group_name AS "DonorGroupName",
	rui_location_hubmap_id AS "RuiLocationHubmapID",
	rui_location_submission_id AS "RuiLocationSubmissionID",
	rui_location_uuid AS "RuiLocationUUID",
	sample_metadata_hubmap_id AS "SampleMetadataHubmapID",
	sample_metadata_submission_id AS "SampleMetadataSubmissionID",
	sample_metadata_uuid AS "SampleMetadataUUID",
	processed_dataset_uuid AS "ProcessedDatasetUUID",
	dataset_h5ad_path AS "DatasetH5adPath",
	dataset_total_cell_count AS "DatasetTotalCellCount",
	collection_id AS "collectionId",
	collection_name AS "PublicationTitle",
	publication_doi AS "linkedToPublication",
	organ_ontologies AS "hasOrgan",
	anatomical_structures AS "anatomicalStructures",
	anatomical_structure_ontologies AS "hasAnatomicalStructure",
	suspension_types AS "suspensionTypes"
    FROM CTE
) row
TO datasets_metadata.json
